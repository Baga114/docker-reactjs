trigger:
- master

pool:
  vmImage: 'ubuntu-latest'

variables:
  acrServiceConnection: 'acr-connection'
  sonarServiceConnection: 'sonar-connection'
  aksServiceConnection: 'aks-connection'

stages:
- stage: Analysis
  jobs:
  - job: AnalysisJob
    displayName: 'Run Analysis'
    steps:
    - checkout: self

    # SonarQube Prepare Analysis Configuration
    - task: SonarQubePrepare@4
      inputs:
        SonarQube: 'sonar-connection'
        scannerMode: 'CLI'
        configMode: 'manual'
        cliProjectKey: 'testingsonar123'

- stage: SonarQualityGateCheck
  jobs:
  - job: SonarQualityGateCheckJob
    displayName: 'Sonar Quality Gate Check'
    steps:
    - checkout: self

    # Run SonarQube quality gate check using Bash script
    - script: |
        set -x
        sonarQubeUrl="http://20.15.204.13:9000/api/qualitygates/project_status?projectKey=testingsonar123"
        projectKey="testingsonar123"
        
        qualityGateStatus=$(curl -s "$sonarQubeUrl/api/qualitygates/project_status?projectKey=$projectKey" | jq -r '.projectStatus.status')
        
        if [ "$qualityGateStatus" != "OK" ]; then
          echo "SonarQube quality gate check failed."
          exit 1
        fi
        
        echo "SonarQube quality gate check passed."
      displayName: 'Run SonarQube Quality Gate Check'

- stage: BuildAndPush
  displayName: 'Build and Push to ACR'
  jobs:
  - job: Build
    displayName: 'Build and Push'
    steps:
    - checkout: self
    - task: Docker@2
      displayName: 'Build and push Docker image'
      inputs:
        command: 'buildAndPush'
        containerRegistry: '$(AcrServiceConnection)'
        repository: 'testing'
        Dockerfile: '$(Build.SourcesDirectory)/Dockerfile'
        tags: |
          $(Build.BuildId)

    - task: CopyFiles@2
      displayName: 'Copy Files to: drop'
      inputs:
        SourceFolder: deployment
        Contents: deployment.yaml
        TargetFolder: drop
    - task: PublishBuildArtifacts@1
      displayName: 'Publish Artifact: drop'
      inputs:
        PathtoPublish: deployment/deployment.yaml
