version: 0.2
phases:
  pre_build:
    commands:
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_REGION | docker login --username AWS --password-stdin 242236232945.dkr.ecr.ca-central-1.amazonaws.com

  build:
    commands:
      - echo Building Docker image...
      - docker build -t 242236232945.dkr.ecr.ca-central-1.amazonaws.com/devops:latest .
      - docker push 242236232945.dkr.ecr.ca-central-1.amazonaws.com/devops:latest

  # Get AWS Credential using STS Assume Role for kubectl
  post_build:
    commands:
      - echo "Setting Environment Variables related to AWS CLI for Kube Config Setup"
      - CREDENTIALS=$(aws sts assume-role --role-arn arn:aws:iam::242236232945:role/eksClusterRole --role-session-name eks-codebuild --duration-seconds 900)
      - export AWS_ACCESS_KEY_ID="$(echo ${CREDENTIALS} | jq -r '.Credentials.AccessKeyId')"
      - export AWS_SECRET_ACCESS_KEY="$(echo ${CREDENTIALS} | jq -r '.Credentials.SecretAccessKey')"
      - export AWS_SESSION_TOKEN="$(echo ${CREDENTIALS} | jq -r '.Credentials.SessionToken')"
      - export AWS_EXPIRATION=$(echo ${CREDENTIALS} | jq -r '.Credentials.Expiration')
      - echo "Update Kube Config configuration"
      - aws eks --region $AWS_REGION update-kubeconfig --name gitsecops
      - echo "Apply changes to kube manifests"
